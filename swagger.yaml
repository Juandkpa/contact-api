openapi: 3.0.1
info:
  title: Contact Api
  description: 'This is a backend api to manage contacts'
  contact:
    email: juandkpa@gmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Local server
tags:
  - name: contacts
    description: All related endpoints for contacts
paths:
  /contacts:
    post:
      tags:
        - contacts
      summary: Create a contact
      operationId: createContact
      requestBody:
        description: New contact to be saved
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContactForm'
        required: true
      responses:
        200:
          $ref: '#components/responses/SuccessfullOneContact'
        400:
          $ref: '#components/responses/BadRequestOneOf'
        415:
          $ref: '#components/responses/UnsupportedMediaType'
  /contacts/{id}:
    put:
      tags:
        - contacts
      summary: Update a contact
      operationId: updateContact
      parameters:
      - name: id
        in: path
        description: Id of the Contact to be updated
        required: true
        schema:
          type: string          
      requestBody:
        description: Information to update an existing contact
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContactWithBinaryFile'
        required: true
      responses:
        200:          
          $ref: '#components/responses/SuccessfullOneContact'
        400:
          $ref: '#components/responses/BadRequestOneOf'
        404:
          $ref: '#components/responses/NotFound'
        415:
          $ref: '#components/responses/UnsupportedMediaType'
        500:
          $ref: '#components/responses/InternalServerError'          
    get:
      tags:
        - contacts
      summary: Get a contact by its id
      operationId: getContact
      parameters:
      - name: id
        in: path
        description: Id of the Contact to be retrieved
        required: true
        schema:
          type: string 
      responses:
        200:
          $ref: '#components/responses/SuccessfullOneContact'
        404:
          $ref: '#components/responses/NotFound'
        500:
          $ref: '#components/responses/InternalServerError'
    delete:
      tags:
        - contacts
      summary: Delete a contact by its id
      operationId: deleteContact
      parameters:
      - name: id
        in: path
        description: Id of the Contact to be deleted
        rquired: true
        schema:
          type: string
      responses:
        200:
          description: Successfull operation
        404:
          $ref: '#components/responses/NotFound'
        500:
          $ref: '#components/responses/InternalServerError'
components:
  schemas:
    BaseContact:
      type: object
      properties:
        name:
          type: string
        company:
          type: string
        profile_image:
          type: string          
        email:
          type: string
        birth_date:
          type: string
        personal_phone_number:
          type: string
        work_phone_number:
          type: string
        address:
          type: string
    ContactWithId:      
      allOf:
        - $ref: '#/components/schemas/BaseContact'
        - type: object
          properties:
            _id:
              type: string
            _v:
              type: integer
      example:
        _id: 60ad9ae8ad0fd3268f3600ec
        name: juan
        company: kin
        profile_image: http://localhost:3000/images/avatar.png
        email: juan@kin.com
        brith_date: '2019-01-20'
        personal_phone_number: '3102056011'
        work_phone_number: '3005559607'
        address: 'Cr 20 # 12 - 10'
        _v: 0
    ContactWithBinaryFile:
      allOf:
        - $ref: '#/components/schemas/BaseContact'
        - type: object
          properties:
            profile_image:
              type: string
              format: binary
    ContactForm:
      type: object
      required:
        - name
        - company
        - profile_image
        - email
        - birth_date
        - personal_phone_number
        - address
      allOf:
        - $ref: '#/components/schemas/ContactWithBinaryFile'
      encoding:
        profile_image:
          contentType: image/*    
  errors:
    baseError:
      type: object
      properties:
        error:
          type: object
          properties:
            message:
              type: string
            statusCode:
              type: string   
    requiredField:
      allOf:
        - $ref: '#/components/errors/baseError'
        - type: object
          properties:
            validationErrors:
              type: array
              items:
                type: object
                properties:
                  value:
                    type: string
                  msg:
                    type: string
                  param:
                    type: string
                  location: 
                    type: string
      example:
        error:
          message: Bad Request
          statusCode: 400
          validateErrors:
            - value: ""
              msg: 'field is required'
              name: name
              location: body
    mediaType:
      allOf:
        - $ref: '#/components/errors/baseError'
        - type: object
          properties:
            validationErrors:
              type: array
              items:
                type: object
                properties:                  
                  field:
                    type: string
                  msg:
                    type: string
      example:
        error:
          message: Unsupported Media Type
          statusCode: 415
          validateErrors:
            - field: profile_image
              msg: You must upload an image              
    notFound:
      allOf:
        - $ref: '#/components/errors/baseError'
        - type: object
      example:
        error:
          message: Contact with id 60ac58fc2e480557ff4a9bd3 not found
          statusCode: 404
    alreadyExists:
      allOf:
        - $ref: '#/components/errors/baseError'
        - type: object
      example:
        errors:
          message: Contact already exists
          statusCode: 400
    serverError:
      type: object
      properties:
        error:
          type: object
          properties:
            message:
              type: string
      example:
        error:
          message: 'Cast to ObjectId failed for value \"6445456\" (type string) at path \"_id\" for model \"Contact\"'
  responses:
    SuccessfullOneContact:
      description: Successfull operation
      content: 
        application/json:
          schema:
            $ref: '#components/schemas/ContactWithId'
    BadRequest:      
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#components/errors/requiredField'
    BadRequestOneOf:
      description: Bad request
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#components/errors/requiredField'
              - $ref: '#components/errors/alreadyExists'
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#components/errors/notFound'
    UnsupportedMediaType:
      description: Unsupported Media Type
      content:
        application/json:
          schema:
            $ref: '#components/errors/mediaType'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#components/errors/serverError'